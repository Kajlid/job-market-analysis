version: "3.8"

services:

  namenode:
      build: ./hdfs
      container_name: namenode
      hostname: namenode
      networks:
        - hadoop_network
      command: start-hadoop namenode
      # command: ["/opt/util/bin/start-hadoop", "namenode"]
      ports:
        - 8020:8020 # RPC
        - "9870:9870" # WebUI        test: 9870:9870
      volumes:
        - hdfs_namenode:/opt/hdfs/name
        - ./hdfs/conf/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml    # :ro
        - ./hdfs/conf/hdfs-site.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml    # :ro
      environment:
        HDFS_USER: hdfsuser
  datanode:
      build: ./hdfs
      container_name: datanode
      networks:
        - hadoop_network
      hostname: datanode
      command: start-hadoop datanode
      ports:
        - 9164:9864        # 9864:9864
      environment:
        HDFS_USER: hdfsuser
      volumes:
        - hdfs_datanode:/opt/hdfs/data
        - ./hdfs/conf:/opt/hadoop/etc/hadoop:ro
      env_file:
        - hadoop.env
      depends_on:
        - namenode

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    networks:
      - hadoop_network
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    command: ["--auth"]
    ports:
      - "27017:27017"


  job-analysis:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: job-analysis
    depends_on:
      - mongodb
      - namenode
      - datanode
    volumes:
      - ./python_scripts:/app/python_scripts
      - ./hdfs/conf:/opt/hadoop/etc/hadoop:ro
      - ./output:/app/output
    env_file:
      - .env
    command: ["python3", "python_scripts/job_analysis.py"]
    networks:
      - hadoop_network

networks:
  hadoop_network:
    name: hadoop_network
    driver: bridge

volumes:
  mongo_data:
  hdfs_namenode:
  hdfs_datanode:
